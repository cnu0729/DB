/****** CREATE TABLE 실습 ******/

-- 고객 테이블 CUSTOMER
CREATE TABLE CUSTOMER(
    CUSTOMER_ID NUMBER(10,0) PRIMARY KEY,
    CUSTOMER_NAME VARCHAR2(100) NOT NULL,
    CUSTOMER_EMAIL VARCHAR2(100) CONSTRAINT C_EMAIL UNIQUE,
    CUSTOMER_PHONE VARCHAR2(20),
    CONSTRAINT C_PHONE UNIQUE(CUSTOMER_PHONE),
    CUSTOMER_ADDRESS VARCHAR2(255) );
    
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_ID IS '고객아이디'; -- 주석작성
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_NAME IS '고객이름'; -- 주석작성
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_EMAIL IS '고객이메일'; -- 주석작성
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_PHONE IS '고객핸드폰번호'; -- 주석작성
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_ADDRESS IS '고객주소'; -- 주석작성

COMMIT;

-- PRODUCT 테이블 생성
-- PRODUCT_ID NUMBER (10,0) 기본키
-- PRODUCT_NAME VARCHAR(100) NULL 사용 불가
-- PRODUCT_PRICAE NUMBER(소수점2번째 자리까지 허용) NULL 사용 불가
-- PRODUCT_DESC VARCHAR(200) -- 중복 안되는 특별한 값 설정

-- PRODUCT 값 추가
-- 아메리카노 3000 신선한 원두로 만든 아메리카노
-- 2 카페라떼 2500 부드러운 우유가 들어간 라떼
-- 카푸치노 3500 진한 커피와 거품이 어우러진 카푸치노
-- 2 카라멜 마키아토 4000 달콤한 카라멜 시럽이 들어간 마키아토

CREATE TABLE PRODUCT(
    PRODUCT_ID NUMBER (10,0) CONSTRAINT P_ID PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(100) NOT NULL,
    PRODUCT_PRICAE NUMBER(10,2) NOT NULL,
    PRODUCT_DESC VARCHAR2(200) CONSTRAINT P_DESC UNIQUE
);

COMMIT;

INSERT INTO PRODUCT
VALUES(1, '아메리카노', 3000, '신선한 원두로 만든 아메리카노');
INSERT INTO PRODUCT
VALUES(2, '카페라떼', 2500, '부드러운 우유가 들어간 라떼');
INSERT INTO PRODUCT
VALUES(3, '카푸치노', 3500, '진한 커피와 거품이 어우러진 카푸치노');
INSERT INTO PRODUCT 
VALUES(4, '카라멜 마키아토', 4000, '달콤한 카라멜 시럽이 들어간 마키아토');

COMMIT;


-------FOOD COMPANY TABLE 생성
CREATE TABLE FOOD_COMPANY(
    COMPANY_ID NUMBER(10,0) PRIMARY KEY, --회사ID 기본키
    COMPANY_NAME VARCHAR2(100) NOT NULL, --회사 이름 (NULL 불가)
    COMPANY_ADDRESS VARCHAR2(255),       --회사 주소
    COMPANY_PHONE VARCHAR2(20)           --회사 전화번호         
);

COMMIT;

-- SNACKS 테이블 생성
CREATE TABLE SNACKS1(
SNACK_ID NUMBER(10,0) PRIMARY KEY,
SNACK_NAME VARCHAR2(100) NOT NULL,
PRICE NUMBER(10,2) NOT NULL,
CCCCCCCCC NUMBER(10,0),
CONSTRAINT FK_COMPANY1 FOREIGN KEY (CCCCCCCCC)
REFERENCES FOOD_COMPANY (COMPANY_ID)
ON DELETE CASCADE);

CREATE TABLE SNACKS2(
SNACK_ID NUMBER(10,0) PRIMARY KEY,
SNACK_NAME VARCHAR2(100) NOT NULL,
PRICE NUMBER(10,2) NOT NULL,
AAA NUMBER(10,0),
CONSTRAINT FK_COMPANY2 FOREIGN KEY (AAA)
REFERENCES FOOD_COMPANY (COMPANY_ID)
ON DELETE CASCADE);

CREATE TABLE SNACKS3(
SNACK_ID NUMBER(10,0) PRIMARY KEY,
SNACK_NAME VARCHAR2(100) NOT NULL,
PRICE NUMBER(10,2) NOT NULL,
ABCD NUMBER(10,0),
CONSTRAINT FK_COMPANY3 FOREIGN KEY (ABCD)
REFERENCES FOOD_COMPANY (COMPANY_ID)
ON DELETE CASCADE);
-->ABCD FOREIGN KEY 키를 참조할 변수명
----> 참조할 변수명 FK_COMPANY3 규칙명 작성해주는데 규칙명은 모든 테이블 합쳐서 동일한
----> 이름을 쓸 수 없음

--↓↓↓------------------------------------------------------------------------

-- SNACKS 테이블 생성
CREATE TABLE SNACKS(
SNACK_ID NUMBER(10,0) PRIMARY KEY, -- 과자 ID(기본키)
SNACK_NAME VARCHAR2(100) NOT NULL, -- 과자 이름(NULL 불가)
PRICE NUMBER(10,2) NOT NULL, -- 가격(NULL 불가)
COMPANY_ID NUMBER(10,0), --> 핵심포인트
CONSTRAINT FK_COMPANY FOREIGN KEY (COMPANY_ID)
REFERENCES FOOD_COMPANY (COMPANY_ID)
ON DELETE CASCADE
-- FOOD_COMPANY이 회사 ID ON DELETE CASCADE  -- 부모 삭제시 자식까지 삭제해줘
);


-- 테이블 생성 DRINK_COMPANY (
    -- DRINK_ID NUMBER (10,0) 기본키
    -- DRINK_NAME VARCHAR2(100) NOT NULL
    -- DRINK_ADDRESS VARCHAR2(255)
    -- DRINK_PHONE VARCHAR2(20)
CREATE TABLE DRINK_COMPANY (
    DRINK_ID NUMBER (10,0) PRIMARY KEY,
    DRINK_NAME VARCHAR2(100) NOT NULL,
    DRINK_ADDRESS VARCHAR2(255),
    DRINK_PHONE VARCHAR2(20)
);
    
-- 테이블 생성 SOFTS (
CREATE TABLE SOFTS(
    SOFTS_ID NUMBER(10,0) PRIMARY KEY,
    SOFTS_NAME VARCHAR2(100) NOT NULL,
    PRICE NUMBER(10,2) NOT NULL,
    DRINK_ID NUMBER(10,0), --회사 ID
    CONSTRAINT DK_COMPANY FOREIGN KEY (DRINK_ID)
    REFERENCES DRINK_COMPANY (DRINK_ID)
    ON DELETE CASCADE
    );

INSERT INTO DRINK_COMPANY VALUES(1, '코카콜라', '서울시 강남구' ,'02-1234-5678');
INSERT INTO DRINK_COMPANY VALUES(2, '펩시', '서울시 중구' ,'02-8765-4321');

INSERT INTO SOFTS VALUES(1, '콜라', 1500, 1);
INSERT INTO SOFTS VALUES(2, '사이다', 1200, 1);
INSERT INTO SOFTS VALUES(3, '펩시콜라', 1000, 2);
INSERT INTO SOFTS VALUES(4, '마운틴듀ㄹ', 2000, 2);




